/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package nba_selenium;

import java.util.List;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxBinary;
import org.openqa.selenium.firefox.FirefoxOptions;
import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.support.ui.WebDriverWait;

public class App {
  public WebDriver driver;

  public static void main(String[] args) {
    String playerName = String.join(" ", args);
    new App().print3p(playerName);
  }

  public void print3p(String playerName) {
    String[] resultsArray = getData(playerName);
    System.out.println(String.join("", resultsArray));
  }

  public String findPlayerPageUrl(String playerName) {

    Integer year = 2022;
    Integer nextYear = 23;
    String season = "2022-23";

    Boolean pageIsAvailable;
    do {

      this.driver.get(formatUrl(playerName, season));

      List<WebElement> playerRows = this.driver
          .findElements(
              By.xpath("/html/body/div[1]/div[2]/div[2]/div[3]/section[2]/div/div[2]/div[3]/table/tbody/tr/td[2]/a"));
      String playerUrl = playerRows.size() != 0 ? playerRows.get(0).getAttribute("href") : "";

      if (playerUrl != "") {
        return playerUrl;
      }
      System.out.println(year);
      pageIsAvailable = this.driver.findElements(By.xpath("//*[contains(text(),'No data available')]")).size() == 0;
      year -= 1;
      nextYear -= 1;
      season = String.format("%d-%d", year, nextYear);
    } while (pageIsAvailable);

    return "Player not found ðŸ˜¢";
  }

  public String formatUrl(String playerName, String season) {
    return "https://www.nba.com/stats/players/traditional?CF=PLAYER_NAME*E*" + playerName + "&PerMode=Totals&Season="
        + season + "&dir=-1&sort=PTS";
  }

  public String[] getData(String playerName) {

    this.driver = createFirefoxDriver();

    String playerPageUrl = findPlayerPageUrl(playerName);

    this.driver.get(playerPageUrl);

    List<WebElement> rows = new WebDriverWait(this.driver, Duration.ofSeconds(10)).until(driver -> driver.findElements(
        By.xpath("/html/body/div[1]/div[2]/div[2]/section/div[4]/section[3]/div/div[2]/div[3]/table/tbody/tr")));

    String[] resultsArray = new String[rows.size()];

    for (int i = 0; i < rows.size(); i++) {
      String[] data = rows.get(i).getText().split(" ");
      resultsArray[i] = String.format("%s %s%n", data[0], data[9]);
    }
    return resultsArray;

  }

  public WebDriver createFirefoxDriver() {

    WebDriverManager.firefoxdriver().setup();

    System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE,
        "/dev/null");

    FirefoxBinary firefoxBinary = new FirefoxBinary();
    FirefoxOptions options = new FirefoxOptions();

    options.setBinary(firefoxBinary);
    options.setHeadless(true);

    return new FirefoxDriver(options);
  }

}
